#!/usr/bin/env bash

# bash completion for SWI-Prolog Version Manager (SWIVM)

__swivm_generate_completion()
{
  declare current_word
  current_word="${COMP_WORDS[COMP_CWORD]}"
  COMPREPLY=($(compgen -W "$1" -- "$current_word"))
  return 0
}

__swivm_commands ()
{
  declare current_word
  declare command

  current_word="${COMP_WORDS[COMP_CWORD]}"

  COMMANDS='\
    help install uninstall use run exec \
    alias unalias reinstall-packages \
    current list ls list-remote ls-remote \
    clear-cache deactivate unload \
    version which'

    if [ ${#COMP_WORDS[@]} == 4 ]; then

      command="${COMP_WORDS[COMP_CWORD-2]}"
      case "${command}" in
      alias)  __swivm_installed_nodes ;;
      esac

    else

      case "${current_word}" in
      -*)     __swivm_options ;;
      *)      __swivm_generate_completion "$COMMANDS" ;;
      esac

    fi
}

__swivm_options ()
{
  OPTIONS=''
  __swivm_generate_completion "$OPTIONS"
}

__swivm_installed_nodes ()
{
  __swivm_generate_completion "$(swivm_ls) $(__swivm_aliases)"
}

__swivm_aliases ()
{
  declare aliases
  aliases=""
  if [ -d $SWIVM_DIR/alias ]; then
    aliases="`cd $SWIVM_DIR/alias && command ls`"
  fi
  echo "${aliases}"
}

__swivm_alias ()
{
  __swivm_generate_completion "$(__swivm_aliases)"
}

__swivm ()
{
  declare previous_word
  previous_word="${COMP_WORDS[COMP_CWORD-1]}"

  case "$previous_word" in
  use|run|exec|ls|list|uninstall) __swivm_installed_nodes ;;
  alias|unalias)  __swivm_alias ;;
  *)              __swivm_commands ;;
  esac

  return 0
}

# complete is a bash builtin, but recent versions of ZSH come with a function
# called bashcompinit that will create a complete in ZSH. If the user is in
# ZSH, load and run bashcompinit before calling the complete function.
if [[ -n ${ZSH_VERSION-} ]]; then
	autoload -U +X bashcompinit && bashcompinit
fi

complete -o default -o nospace -F __swivm swivm
